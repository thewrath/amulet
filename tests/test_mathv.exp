view ops
[2, 3, 4, 5]
[3, 4, 5, 6]
[vec2(6, 8), vec2(8, 10)]
[vec2(4, 4), vec2(2, 2)]
[vec2(2, 4), vec2(3, 6)]
[vec2(1, 1), vec2(2, 8)]
[vec3(2, 4, 6), vec3(3, 6, 9)]
[vec2(10, 20), vec2(100, 200), vec2(1000, 2000)]
[vec3(10, 20, 30), vec3(100, 200, 300), vec3(1000, 2000, 3000)]
[vec3(2, 2, 3), vec3(4, 6, 6), vec3(7, 8, 10)]
[6, 16]
[1, 0, -1]
[-1, -2]
view generators
[-100, -80, -60, -40, -20, 0, 20, 40, 60, 80, 100]
[10, 5, 0]
[100, 80, 60, 40, 20, 0, -20, -40, -60, -80, -100]
[0, 10, 20, 30, 40]
[-3000, -2000, -1000, 0, 1000, 2000, 3000]
[60000, 50000, 40000, 30000, 20000, 10000]
[-1000000, 1000000]
[10000000, 20000000, 30000000, 40000000, 50000000, 60000000, 70000000, 80000000, 90000000]
view shape changers
[vec3(1, 2, 20), vec3(10, 2, 20), vec3(100, 2, 20), vec3(1, 200, 220), vec3(10, 200, 220), vec3(100, 200, 220)]
[vec2(1, 2), vec2(10, 2), vec2(100, 2), vec2(1, 20), vec2(10, 20), vec2(100, 20), vec2(1, 200), vec2(10, 200), vec2(100, 200)]
[vec2(1, 2), vec2(10, 2), vec2(100, 2), vec2(1, 20), vec2(10, 20), vec2(100, 20), vec2(1, 200), vec2(10, 200), vec2(100, 200)]
[vec3(1, 2, 3), vec3(10, 20, 3), vec3(100, 200, 3), vec3(1, 2, 30), vec3(10, 20, 30), vec3(100, 200, 30), vec3(1, 2, 300), vec3(10, 20, 300), vec3(100, 200, 300)]
[vec3(3, 1, 2), vec3(30, 1, 2), vec3(300, 1, 2), vec3(3, 10, 20), vec3(30, 10, 20), vec3(300, 10, 20), vec3(3, 100, 200), vec3(30, 100, 200), vec3(300, 100, 200)]
[vec2(1, 3), vec2(2, 3)]
[vec4(1, 3, 4, 5), vec4(2, 3, 6, 7)]
test matrix views
[mat3(1, 0, 0,
     0, 1, 0,
     0, 0, 1), 
 mat3(2, 0, 0,
     0, 2, 0,
     0, 0, 2), 
 mat3(3, 0, 0,
     0, 3, 0,
     0, 0, 3)]
[vec3(1, 2, 3), vec3(2, 4, 6), vec3(3, 6, 9)]
[vec3(1, 2, 3), vec3(2, 4, 6), vec3(3, 6, 9)]
[vec4(2, 4, 6, 8), vec4(10, 12, 14, 16)]
[vec4(2, 4, 6, 8), vec4(10, 12, 14, 16)]
[vec4(2, 4, 6, 2), vec4(8, 10, 12, 2)]
view swizzle fields
[1, 3, 5]
[2, 4, 6]
[vec2(1, 2), vec2(3, 4), vec2(5, 6)]
[vec2(1, 2), vec2(4, 5), vec2(7, 8)]
[3, 6, 9]
[vec2(1, 2), vec2(5, 6)]
[vec3(2, 3, 4), vec3(6, 7, 8)]
[vec2(3, 4), vec2(7, 8)]
[vec4(1, 2, 3, 4), vec4(5, 6, 7, 8)]
[1, 5]
[2, 6]
[3, 7]
[4, 8]
[vec4(-1, 2, 3, 4), vec4(-1, 6, 7, 8)]
[vec4(-1, 10, 20, 4), vec4(-1, 30, 40, 8)]
[vec4(-1, 100, 200, 300), vec4(-1, 400, 500, 600)]
[vec4(200, 300, 200, 300), vec4(500, 600, 500, 600)]
[vec4(200, 300, 200, 300), vec4(500, 600, 500, 600)]
view methods
[vec2(2, 12), vec2(3, 22), vec2(4, 32), vec2(5, 42)]
[vec2(-1, 1), vec2(-2, 2), vec2(-3, 3), vec2(5, 42)]
casting
[vec3(1, 2, 3), vec3(4, 5, 6)]
[vec3(1, 2, 3), vec3(4, 5, 6)]
[vec2(1, 2), vec2(3, 4)]
[vec2(1, 2), vec2(3, 4)]
[1, 2, 3]
[vec2(2, 1), vec2(1, 3)]
filter
[9, 7, 6, 10]
[3, 1, 6, 2]
[3, 7, 6, 2]
[9, 1, 2]
[1]
[1, 2]
[2, 8, 12, 4]
[9, 1, 7]
aggregates
6
vec2(4, 6)
vec3(5, 7, 9)
2
5
16
vec4(4, 3, 3, 4)
5
-1
vec3(1, 2, 1)
array of structs
[vec2(0, 1), vec2(8, 9), vec2(4, 5)]
[vec4(1, 1, 1, 0), vec4(1, 0, 1, 1), vec4(0, 0, 0, 1)]
[vec2(8, 9)]
[vec4(1, 0, 1, 1)]
struct of arrays
[vec2(0, 1), vec2(8, 9), vec2(4, 5)]
[vec4(1, 1, 1, 0), vec4(1, 0, 1, 1), vec4(0, 0, 0, 1)]
[vec2(8, 9)]
[vec4(1, 0, 1, 1)]
empty arrays
[]
[]
[]
[]
0
nil
nil
